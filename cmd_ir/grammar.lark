start: preamble? body*

preamble: "preamble" "{" instruction* "}"

?body: function | extern_func

extern_func: "extern" "function" IDENT NEWLINE

function: "function" IDENT "{" function_body "}"

function_body: preamble? block*

block: LABEL NEWLINE instruction*

instruction: ( assign_insn | normal_insn ) NEWLINE

assign_insn: VAR_NAME ASSIGN_OP ( normal_insn | atom )
normal_insn: IDENT operand_list

operand_list: (operand ("," operand)*)?
operand: IDENT | atom | tuple
?atom: ESCAPED_STRING | SIGNED_INT | VAR_NAME | FUNC_REF | BLOCK_REF | NULL | SIGNED_FLOAT

tuple: "(" atom ["," atom] ")"

LABEL: CNAME ":"
IDENT: CNAME
VAR_NAME: "$" CNAME
FUNC_REF: "@" CNAME
BLOCK_REF: ":" CNAME
NULL: "NULL"

ASSIGN_OP: "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "><" | "<" | ">"

%import common.ESCAPED_STRING
%import common.CNAME
%import common.SIGNED_INT
%import common.SIGNED_FLOAT
%import common.WS
%import common.NEWLINE

%ignore WS
COMMENT: "#" /[^\n]/*
%ignore COMMENT
